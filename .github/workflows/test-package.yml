# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Test

on:
  push:
    branches-ignore:
    - master

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      run: |
        sudo apt-get update
        sudo apt-get install curl -y
        curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python
        export PATH=$PATH:${HOME}/.poetry/bin
        poetry config virtualenvs.create false
        echo "::add-path::${HOME}/.poetry/bin"
    - name: Install dependencies
      run: |
        poetry install
    - name: Lint with flake8
      run: |
        poetry add --dev flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        export PYTHONPATH=src
        mkdir coverage
        pytest --cov=./ --cov-report=xml -sv
    - name: Upload coverage
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        files: .coverage1.xml, ./coverage2.xml
        directory: ./coverage/reports
        flags: unittest
        env_vars: OS, PYTHON
        path_to_write_report: ./coverage/codecov_report.gz
        